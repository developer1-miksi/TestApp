definitions:
  env_vars: &env_vars
    FIREBASE_PROJECT_ID: your-firebase-project-id
    BASE_ASSETS_URL: your-base-assets-url # This might not be needed if ASSETS_URL is fully specified per build
    ASSETS_URL: "https://example.com/path/to/assets_${CLIENT_ID}.zip" # This should be set dynamically per build

  scripts:
    - &get_assets
      name: Download and unpack client-specific assets
      script: |
        echo "Downloading assets from ${ASSETS_URL}"
        curl -o "assets_${CLIENT_ID}.zip" "${ASSETS_URL}" || echo "Failed to download assets_${CLIENT_ID}.zip"
        unzip "assets_${CLIENT_ID}.zip" -d ./assets

    - name: Replace assets, .env, and Google services files
      script: |
        # Replace images
        cp ./assets/images/app_launcher_icon.png ./android/app/src/main/res/mipmap/
        cp ./assets/images/app_launcher_icon.png ./ios/Runner/Assets.xcassets/AppIcon.appiconset/
        cp ./assets/images/error_image.png ./assets/images/
        
        # Replace Google services files
        cp ./assets/android/google-services.json ./android/app/
        cp ./assets/ios/GoogleService-Info.plist ./ios/Runner/

        # Replace .env file
        cp ./assets/client/client.env ./assets/

workflows:
  ios-client-release:
    name: iOS client release
    instance_type: mac_mini_m1
    labels:
      - ${CLIENT_ID}
    environment:
      groups:
        - env_vars
      vars:
        <<: *env_vars
        XCODE_SCHEME: "Runner"
        FIREBASE_TOKEN: your-firebase-ci-token
        APP_NAME: "Default App Name"
        BUNDLE_ID: "com.example.app"
        CLIENT_ID: "example-client-id" # Ensure this is dynamically set if needed
        ASSETS_URL: "https://example.com/path/to/assets_${CLIENT_ID}.zip" # Th
    scripts:
      - name: Download and unpack client-specific assets
        script: |
          echo "Downloading assets from ${ASSETS_URL}"
          curl -o "assets_${CLIENT_ID}.zip" "${ASSETS_URL}" || echo "Failed to download assets_${CLIENT_ID}.zip"
          unzip "assets_${CLIENT_ID}.zip" -d ./assets
      - name: Replace assets, .env, and Google services files
        script: |
          # Replace images
          cp ./assets/images/app_launcher_icon.png ./android/app/src/main/res/mipmap/
          cp ./assets/images/app_launcher_icon.png ./ios/Runner/Assets.xcassets/AppIcon.appiconset/
          cp ./assets/images/error_image.png ./assets/images/
          
          # Replace Google services files
          cp ./assets/android/google-services.json ./android/app/
          cp ./assets/ios/GoogleService-Info.plist ./ios/Runner/

          # Replace .env file
          cp ./assets/client/client.env ./assets/
      - name: Change iOS app name
        script: |
          /usr/libexec/PlistBuddy -c "Set :CFBundleName $APP_NAME" -c "Set :CFBundleDisplayName $APP_NAME" ios/${XCODE_SCHEME}/Info.plist
      - name: Install dependencies
        script: |
          flutter packages pub get
      - name: Flutter build ipa and automatic versioning
        script: |
          BUILD_NUMBER=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1))
          flutter build ipa --release \
          --build-name=1.0.$BUILD_NUMBER \
          --build-number=$BUILD_NUMBER\
          --export-options-plist=/Users/builder/export_options.plist
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - test-results/flutter.json
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
      email:
        recipients:
          - name@mail.com
