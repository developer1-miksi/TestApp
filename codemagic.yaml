definitions:
  env_versions: &env_versions
    flutter: stable
    xcode: 14.2
    cocoapods: default

  env_vars: &env_vars
    # FIREBASE_PROJECT_ID: your-firebase-project-id
    # BASE_ASSETS_URL: your-base-assets-url # This might not be needed if ASSETS_URL is fully specified per build
    # ASSETS_URL: "https://example.com/path/to/assets_${CLIENT_ID}.zip" # This should be set dynamically per build

workflows:
  ios-client-release:
    name: iOS client release
    instance_type: mac_mini_m1
    labels:
      - ${CLIENT_ID}
    environment:
      groups:
        - env_vars # Ensure this group includes CLIENT_ID and ASSETS_URL
      ios_signing:
        provisioning_profiles:
          - profile: clientApp1
        certificates:
          - certificate: distributionCertificate
      vars:
        XCODE_SCHEME: "Runner"
    scripts:
      - name: Debug environment variables
        script: |
          echo "App Name: ${APP_NAME}"
          echo "Bundle ID: ${BUNDLE_ID}"
          echo "Firebase Token: ${FIREBASE_TOKEN}"

      - name: Download and unpack client-specific assets
        script: |
          echo "Downloading assets from ${ASSETS_URL}"
          curl -o "assets_${CLIENT_ID}.zip" "${ASSETS_URL}" || echo "Failed to download assets_${CLIENT_ID}.zip"
          echo "Removing old assets and configuration files"
          rm -rf ./assets/
          unzip "assets_${CLIENT_ID}.zip" -d ./assets
          echo "Adjusting assets directory structure"
          mv ./assets/assets/* ./assets/
          rm -rf ./assets/assets
          echo "List of files in assets directory:"
          ls -la ./assets/

      - name: Update assets and configuration files
        script: |
          echo "Replacing Google services files"
          if [ -f "./assets/google-services.json" ]; then
            cp ./assets/google-services.json ./android/app/
          else
            echo "google-services.json not found in assets folder."
          fi
          if [ -f "./assets/GoogleService-Info.plist" ]; then
            cp ./assets/GoogleService-Info.plist ./ios/Runner/
          else
            echo "GoogleService-Info.plist not found in assets folder."
          fi
          if [ -f "./assets/client/client.env" ]; then
            cp ./assets/client/client.env ./assets/
          else
            echo "client.env file not found in assets/client folder."
          fi
          flutter pub get
          flutter pub run flutter_launcher_icons

      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles

      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release --export-options-plist=/Users/builder/export_options.plist

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - test-results/flutter.json
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID

      email:
        recipients:
          - name@mail.com
